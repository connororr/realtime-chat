swagger: "2.0"
info:
  version: "1.0.0"
  title: "UA Consultants"
host: "13.211.139.75:3800"
basePath: "/"
tags:
- name: "user"
  description: "Operations about user"
- name: "job"
  description: "All things job related"
- name: "chat"
  description: "All things messaging related"
schemes:
- "http"
paths:
  /user/register:
    post:
      tags:
        - "user"
      summary: "Register a new user"
      description: ""
      operationId: "register"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/Register"
      responses:
        200:
          description: "User registered successfully"
          schema:
            $ref: "#/definitions/RegisterResponseSuccess"
        400:
          description: "Invalid ID supplied"
          schema:
            $ref: "#/definitions/RegisterResponseFail"
  /user/login:
    get:
      tags:
      - "user"
      summary: "Login a user"
      description: ""
      operationId: "login"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/Login"
      responses:
        200:
          description: "User logged in successfully"
          schema:
            $ref: "#/definitions/LoginResponseSuccess"
        400:
          description: "Invalid Login Details"
          schema:
            $ref: "#/definitions/LoginResponseFail"
  /user/logout:
    get:
      tags:
      - "user"
      summary: "Logs out current logged in user session"
      description: ""
      operationId: "logoutUser"
      produces:
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"
  /user/profile/{id}:
    get:
      tags:
      - "user"
      summary: "Get user by user name"
      description: ""
      operationId: "getUserByName"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The name that needs to be fetched. Use user1 for testing. "
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Invalid username supplied"
        404:
          description: "User not found"
definitions:
  Register:
    type: "object"
    properties:
      email:
        type: "string"
      username:
        type: "string"
      password:
        type: "string"
  Login:
    type: "object"
    properties:
      username:
        type: "string"
        example: "ben2"
      password:
        type: "string"
        example: "ben000"
  RegisterResponseSuccess:
    type: "object"
    properties:
      email:
        type: "string"
      session_token:
        type: "string"
      status:
        type: "string"
        example: "success"
      username:
        type: "string"
  RegisterResponseFail:
    type: "object"
    properties:
      error:
        type: "string"
      status:
        type: "string"
        example: "failure"
      username:
        type: "string"
  LoginResponseSuccess:
    type: "object"
    properties:
      session_token:
        type: "string"
      status:
        type: "string"
        example: "success"
  LoginResponseFail:
    type: "object"
    properties:
      error:
        type: "string"
      status:
        type: "string"
        example: "failure"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
  UserReister:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
