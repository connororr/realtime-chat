{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2019-09-19T11:14:46.825Z",
    "end": "2019-09-19T11:14:59.302Z",
    "duration": 12477,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "dbe91f80-09ba-455e-b8cc-d45972503fce",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "c531d681-dc3b-4210-b78a-5df4991ec2dc",
        "title": "As a Client/Supplier, I want to search relevant job information from the main screen, so that I can find the information I need as soon as possible",
        "fullFile": "/Users/pseudoram/Programming/capstone/tests/spec/search/functionalitytest.spec.js",
        "file": "/spec/search/functionalitytest.spec.js",
        "beforeHooks": [],
        "afterHooks": [
          {
            "title": "\"after all\" hook",
            "fullTitle": "As a Client/Supplier, I want to search relevant job information from the main screen, so that I can find the information I need as soon as possible \"after all\" hook",
            "timedOut": false,
            "duration": 122,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "driver.quit()",
            "err": {},
            "isRoot": false,
            "uuid": "86bae310-fe58-4bb2-bdb4-f8586dc5d731",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "Test 1",
            "fullTitle": "As a Client/Supplier, I want to search relevant job information from the main screen, so that I can find the information I need as soon as possible Test 1",
            "timedOut": false,
            "duration": 9297,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "await driver.get(\"http://localhost:3000\");\nconst filters = [\"Roofing\", \"NSW\"];\nfilters.forEach(async field => {\n  const e = await getElement(By.css(`option[value='${field}']`));\n  e.click();\n});\nawait driver.sleep(1000);\nconst e = await getElement(By.xpath(\"//*[text()[contains(.,'FIND')]]\"));\ne.click();\n//element.getText()\nawait driver.wait(until.urlContains(\"search\"));\nconst url = await driver.getCurrentUrl();\nexpect(new RegExp(filters.join(\"|\")).test(url)).to.equal(true);",
            "err": {},
            "isRoot": false,
            "uuid": "21e86e6c-7ca2-4d7f-be2b-03f16364228a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Test 2",
            "fullTitle": "As a Client/Supplier, I want to search relevant job information from the main screen, so that I can find the information I need as soon as possible Test 2",
            "timedOut": false,
            "duration": 1474,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "await driver.get(\"http://localhost:3000\");\nconst filters = [\"Rain Water Tanks\", \"ACT\"];\nfilters.forEach(async field => {\n  const e = await getElement(By.css(`option[value='${field}']`));\n  e.click();\n});\nawait driver.sleep(1000);\nconst e = await getElement(By.xpath(\"//*[text()[contains(.,'FIND')]]\"));\ne.click();\n//element.getText()\nawait driver.wait(until.urlContains(\"search\"));\nconst url = await driver.getCurrentUrl();\nexpect(new RegExp(filters.join(\"|\")).test(url)).to.equal(true);",
            "err": {},
            "isRoot": false,
            "uuid": "3b152f16-4778-4fb6-bb95-6447f0fb8172",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Test 3",
            "fullTitle": "As a Client/Supplier, I want to search relevant job information from the main screen, so that I can find the information I need as soon as possible Test 3",
            "timedOut": false,
            "duration": 1566,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "await driver.get(\"http://localhost:3000\");\nconst filters = [\"Waterproofing\", \"SA\"];\nfilters.forEach(async field => {\n  const e = await getElement(By.css(`option[value='${field}']`));\n  e.click();\n});\nawait driver.sleep(1000);\nconst e = await getElement(By.xpath(\"//*[text()[contains(.,'FIND')]]\"));\ne.click();\n//element.getText()\nawait driver.wait(until.urlContains(\"search\"));\nconst url = await driver.getCurrentUrl();\nexpect(new RegExp(filters.join(\"|\")).test(url)).to.equal(true);",
            "err": {},
            "isRoot": false,
            "uuid": "ab4b6f83-6ae3-4492-ab60-9daad234e9d7",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "21e86e6c-7ca2-4d7f-be2b-03f16364228a",
          "3b152f16-4778-4fb6-bb95-6447f0fb8172",
          "ab4b6f83-6ae3-4492-ab60-9daad234e9d7"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 12337,
        "root": false,
        "rootEmpty": false,
        "_timeout": 0
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 0
  },
  "copyrightYear": 2019
}